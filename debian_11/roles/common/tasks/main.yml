- block:
    - name: Set hostname to '{{ hostname }}'
      hostname:
        name: "{{ hostname }}"
        use: debian

    - name: Replace ipv4 localhost in '/etc/hosts'
      replace:
        path: /etc/hosts
        regexp: '^127.0.0.1(\s+)localhost.*'
        replace: '127.0.0.1\1localhost {{ hostname }}'

    - name: Replace ipv6 localhost in '/etc/hosts'
      replace:
        path: /etc/hosts
        regexp: '^::1(\s+)localhost ip6-localhost ip6-loopback.*'
        replace: '::1\1localhost ip6-localhost ip6-loopback {{ hostname }}'
  when: hostname is defined and hostname != None


- name: Set timezone to '{{ time_zone }}'
  timezone: name={{ time_zone }}
  when: time_zone is defined and time_zone != None


- name: Update packages cache
  apt:
    update_cache: yes


- name: Update all packages
  package:
    name: "*"
    state: latest


- name: Install core packages
  package:
    state: present
    name:
      - tuned-utils
      - ntp
      - mc
      - screen
      - telnet
      - curl
      - wget
      - rsync
      - zip
      - unzip
      - tcpdump
      - iotop
      - ifstat
      - util-linux
      - git


- block:
    - name: Allow 'sudo' group do 'sudo' command without a password
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%sudo\tALL=\(ALL:ALL\) ALL'
        line: "%sudo\tALL=(ALL)\tNOPASSWD: ALL"

    - name: Add the '{{ sudo_user }}' user to the 'sudo' group
      user:
        name: "{{ sudo_user }}"
        create_home: yes
        groups: sudo
        append: yes
        shell: /bin/bash

    - name: Set permission for '/home/{{ sudo_user }}'
      file:
        path: /home/{{ sudo_user }}
        mode: '0750'
  when: sudo_user is defined and sudo_user != None


- name: Selinux disable
  selinux: state=disabled
  when: selinux_disable is defined and selinux_disable == True


- block:
    - name: Get current tuned profile
      shell: tuned-adm profile_info | head -n 2 | tail -n 1
      register: current_tuned_profile
      changed_when: false

    - debug:
        msg: "Current tuned profile: '{{ current_tuned_profile.stdout }}'"

    - name: "Activate tuned profile: '{{ tuned_profile }}'"
      command: tuned-adm profile {{ tuned_profile }}
      when: current_tuned_profile is defined and current_tuned_profile.stdout != tuned_profile
  when: tuned_profile is defined


- block:
    - name: Create '{{ swap_file_path }}' swap file
      command:
        cmd: fallocate -l {{swap_file_size_mb}}M {{ swap_file_path }}
        creates: "{{ swap_file_path }}"

    - name: Change '{{ swap_file_path }}' swap file permissions
      file:
        path: "{{ swap_file_path }}"
        owner: root
        group: root
        mode: "0600"

    - name: "Check '{{ swap_file_path }}' swap file type"
      command:
        cmd: file {{ swap_file_path }}
      changed_when: False
      register: swapfile

    - block:
        - name: Make '{{ swap_file_path }}' swap file
          command:
            cmd: mkswap {{ swap_file_path }}

        - name: swapon '{{ swap_file_path }}'
          command:
            cmd: swapon {{ swap_file_path }}
      when: swapfile.stdout.find('swap file') == -1

    - name: Write '{{ swap_file_path }}' swap entry in fstab
      mount:
        src: "{{ swap_file_path }}"
        fstype: swap
        path: none
        state: present

    - name: Set swappiness
      sysctl:
        name: vm.swappiness
        value: "{{ swappiness }}"
  when: swap_file_size_mb is defined and swap_file_size_mb != 0


- name: Logrotate with 'compress'
  lineinfile:
    dest: /etc/logrotate.conf
    state: present
    regexp: "^#compress"
    line: "compress"
  register: logrotate_conf_compress_changed_status


- debug:
    msg: "logrotate_conf_compress_changed_status: '{{ logrotate_conf_compress_changed_status }}'"


- name: Logrotate with 'dateext'
  lineinfile:
    dest: /etc/logrotate.conf
    state: present
    regexp: "^#dateext"
    line: "dateext"
  register: logrotate_conf_dateext_changed_status


- debug:
    msg: "logrotate_conf_dateext_changed_status: '{{ logrotate_conf_dateext_changed_status }}'"
